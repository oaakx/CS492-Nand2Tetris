// class Square
// constructor Square Square.new
function Square.new 0
push constant 3
call Memory.alloc 1
pop pointer 0 // alloc this segment
push argument 0 // Ax
pop this 0 // x
push argument 1 // Ay
pop this 1 // y
push argument 2 // Asize
pop this 2 // size
push pointer 0
call Square.draw 1
pop temp 0 // void
push pointer 0 // this
return
// method void Square.dispose
function Square.dispose 0
push argument 0
pop pointer 0 // init this segment
push pointer 0 // this
call Memory.deAlloc 1
pop temp 0 // void
push constant 0
return
// method void Square.draw
function Square.draw 0
push argument 0
pop pointer 0 // init this segment
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 0 // x
push this 2 // size
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
push constant 0
return
// method void Square.erase
function Square.erase 0
push argument 0
pop pointer 0 // init this segment
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 0 // x
push this 2 // size
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
push constant 0
return
// method void Square.incSize
function Square.incSize 0
push argument 0
pop pointer 0 // init this segment
push this 1 // y
push this 2 // size
add
push constant 254
lt
push this 0 // x
push this 2 // size
add
push constant 510
lt
and
not
if-goto Square.incSize$ifend0
push pointer 0
call Square.erase 1
pop temp 0 // void
push this 2 // size
push constant 2
add
pop this 2 // size
push pointer 0
call Square.draw 1
pop temp 0 // void
label Square.incSize$ifend0
push constant 0
return
// method void Square.decSize
function Square.decSize 0
push argument 0
pop pointer 0 // init this segment
push this 2 // size
push constant 2
gt
not
if-goto Square.decSize$ifend1
push pointer 0
call Square.erase 1
pop temp 0 // void
push this 2 // size
push constant 2
sub
pop this 2 // size
push pointer 0
call Square.draw 1
pop temp 0 // void
label Square.decSize$ifend1
push constant 0
return
// method void Square.moveUp
function Square.moveUp 0
push argument 0
pop pointer 0 // init this segment
push this 1 // y
push constant 1
gt
not
if-goto Square.moveUp$ifend2
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 2 // size
add
push constant 1
sub
push this 0 // x
push this 2 // size
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 1 // y
push constant 2
sub
pop this 1 // y
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 0 // x
push this 2 // size
add
push this 1 // y
push constant 1
add
call Screen.drawRectangle 4
pop temp 0 // void
label Square.moveUp$ifend2
push constant 0
return
// method void Square.moveDown
function Square.moveDown 0
push argument 0
pop pointer 0 // init this segment
push this 1 // y
push this 2 // size
add
push constant 254
lt
not
if-goto Square.moveDown$ifend3
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 0 // x
push this 2 // size
add
push this 1 // y
push constant 1
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 1 // y
push constant 2
add
pop this 1 // y
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 2 // size
add
push constant 1
sub
push this 0 // x
push this 2 // size
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
label Square.moveDown$ifend3
push constant 0
return
// method void Square.moveLeft
function Square.moveLeft 0
push argument 0
pop pointer 0 // init this segment
push this 0 // x
push constant 1
gt
not
if-goto Square.moveLeft$ifend4
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 2 // size
add
push constant 1
sub
push this 1 // y
push this 0 // x
push this 2 // size
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 0 // x
push constant 2
sub
pop this 0 // x
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 0 // x
push constant 1
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
label Square.moveLeft$ifend4
push constant 0
return
// method void Square.moveRight
function Square.moveRight 0
push argument 0
pop pointer 0 // init this segment
push this 0 // x
push this 2 // size
add
push constant 510
lt
not
if-goto Square.moveRight$ifend5
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 1 // y
push this 0 // x
push constant 1
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 0 // x
push constant 2
add
pop this 0 // x
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0 // x
push this 2 // size
add
push constant 1
sub
push this 1 // y
push this 0 // x
push this 2 // size
add
push this 1 // y
push this 2 // size
add
call Screen.drawRectangle 4
pop temp 0 // void
label Square.moveRight$ifend5
push constant 0
return
